#include <stdio.h>
#include <string.h>
#include "protocal_376.h"

int get_length_376(unsigned char *pdata)
{
    unsigned short *plen;
    unsigned short len;

    plen = (unsigned short*)(pdata + 1);
    
    len = NTOHS(*plen);

    return (len>>2);
}


void set_length_376(unsigned char *pdata, unsigned short length)
{
    unsigned short *plen;
    unsigned char protocal_flag = 0;

    plen = (unsigned short*)(pdata +1);
    protocal_flag = NTOHS(*plen) & 0x3;
    *plen = HTONS((length << 2) + protocal_flag);

    plen = (unsigned short*)(pdata +3);
    protocal_flag = NTOHS(*plen) & 0x3;
    *plen = HTONS((length << 2) + protocal_flag);

    return;
}



void set_ctrl_area(unsigned char *pdata, CTL_AREA *ctl_area_struct)
{
    unsigned char *ctl_area;
    //ctl offset 6 bytes
    ctl_area = pdata + 6;
    memcpy(ctl_area, ctl_area_struct, sizeof(CTL_AREA));

    return;
}

void set_address_area(unsigned char *pdata, ADDRESS_AREA *addr)
{
    unsigned short *A1;
    unsigned short *A2;
    unsigned char *A3;

    A1 = (unsigned short *)(pdata + 7);
    *A1 = HTONS(addr->A1);

    A2 = (unsigned short *)(pdata +9);
    *A2 = HTONS(addr->A2);

    A3 = pdata + 11;
    *A3 = addr->A3;

    return;
}


void get_address_area(unsigned char *pdata, ADDRESS_AREA *addr)
{
   unsigned short *A1;
   unsigned short *A2;
   unsigned char *A3;

   A1 = (unsigned short *)(pdata + 7);
   A2 = (unsigned short *)(pdata + 9);
   A3 = pdata + 11;

   addr->A1 = NTOHS(*A1);
   addr->A2 = NTOHS(*A2);
   addr->A3 = *A3;

   return; 
}

void add_data_to_buffer(unsigned char *pdata, unsigned char *ori_data, unsigned int length)
{
    memcpy(pdata+12, ori_data, length);
    
    return;
}



unsigned char calculate_checksum(unsigned char *pdata, unsigned short length)
{
    int i=0;
    unsigned char sum =0;
    
    for(i=6; i<6+length; i++)
	    sum += *(pdata+i);

    return sum;
    
}


int main()
{
  unsigned char pdata[] = {0x68,0x32,0x00,0x32,0x00,0x68,0xc9,0x01,0x32,0x02,0x00,0x00,0x02,0x71,0x00,0x00,0x01,0x00};
  int i =0;
  
  printf("checksum=%x\n", calculate_checksum(pdata,12));
  for(i=0; i<sizeof(pdata); i++)
      printf("%x ",pdata[i]);
  printf("\n");

  return 0;
}
